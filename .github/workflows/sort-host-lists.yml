name: Sort Host Lists

on:
  push:
    branches: [ main, master ]
    paths:
      - 'hosts/*.txt'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'hosts/*.txt'
  workflow_dispatch:

jobs:
  sort-host-lists:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Sort all host list files
      run: |
        CHANGES_MADE=false
        
        # Find all .txt files in the hosts directory
        for file in hosts/*.txt; do
          if [ -f "$file" ]; then
            echo "Processing $file..."
            
            # Create a backup
            cp "$file" "$file.bak"
            
            # Create temporary files for comments and host entries
            grep '^#' "$file" > "$file.comments" 2>/dev/null || touch "$file.comments"
            grep -v '^#' "$file" | grep -v '^[[:space:]]*$' > "$file.hosts" 2>/dev/null || touch "$file.hosts"
            
            # Sort only the host entries (non-comment lines)
            if [ -s "$file.hosts" ]; then
              sort -k2 "$file.hosts" > "$file.hosts.sorted"
              mv "$file.hosts.sorted" "$file.hosts"
            fi
            
            # Count the number of domains
            domain_count=$(wc -l < "$file.hosts" | tr -d ' ')
            
            # Get the file basename for the header
            basename=$(basename "$file" .txt)
            # Capitalize first letter
            capitalized_basename="$(tr '[:lower:]' '[:upper:]' <<< ${basename:0:1})${basename:1}"
            
            # Generate header with current date and domain count
            current_date=$(date -u "+%Y-%m-%dT%H:%M:%SZ")
            
            # Create header
            {
              echo "# French $capitalized_basename Domains Blocklist"
              echo "# Description: Blocklist of $basename domains targeting French users"
              echo "# Last updated: $current_date"
              echo "# Total domains blocked: $domain_count"
              echo "# Format: 0.0.0.0 domain.com"
              echo "# "
              echo "# Source: https://github.com/yassirh/blocklist-fr"
              echo "# License: MIT"
              echo ""
            } > "$file"
            
            # Add the sorted hosts
            cat "$file.hosts" >> "$file"
            
            # Clean up temporary files
            rm -f "$file.comments" "$file.hosts"
            
            # Check if there are any meaningful changes (excluding timestamp)
            # Remove the "Last updated" line from both files for comparison
            grep -v "^# Last updated:" "$file" > "$file.compare" 2>/dev/null || touch "$file.compare"
            grep -v "^# Last updated:" "$file.bak" > "$file.bak.compare" 2>/dev/null || touch "$file.bak.compare"
            
            if ! diff -q "$file.compare" "$file.bak.compare" > /dev/null; then
              echo "Meaningful changes detected in $file"
              CHANGES_MADE=true
            else
              echo "No meaningful changes in $file (only timestamp updated)"
              # Restore the original file since only timestamp changed
              cp "$file.bak" "$file"
            fi
            
            # Clean up comparison files and backup
            rm -f "$file.compare" "$file.bak.compare" "$file.bak"
          fi
        done
        
        echo "CHANGES_MADE=$CHANGES_MADE" >> $GITHUB_ENV
    
    - name: Commit and push if changes were made
      if: env.CHANGES_MADE == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add hosts/*.txt
        git commit -m "Auto-sort host list files [skip ci]"
        git push
